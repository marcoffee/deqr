name: Build with Poetry

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-18.04]
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install --no-root
    - name: Build
      run: |
        poetry build

  build-linux-aarch64:
    runs-on: [self-hosted, linux, ARM64]
    container:
      image: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: ["python:3.8-alpine", "python:3.9-alpine"]

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Install toolchain
      run: |
        apk add --no-cache gcc git musl-dev libffi-dev libressl-dev curl unzip rust cargo
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install --no-root
    - name: Build
      run: poetry build
    - name: Cleanup
      if: ${{ always() }}
      run: git clean -fdx
