name: Publish with Poetry

on:
  push:
    tags: [ "*" ]

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.8, 3.9]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install --no-root
      - name: Build
        run: |
          poetry build -f wheel
      - name: Publish
        run: |
          poetry publish --username="${{ secrets.PYPI_USERNAME}}" --password="${{ secrets.PYPI_PASSWORD }}"

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install --no-root
      - name: Build
        run: |
          poetry build -f sdist
      - name: Publish
        run: |
          poetry publish --username="${{ secrets.PYPI_USERNAME}}" --password="${{ secrets.PYPI_PASSWORD }}"

  build-wheels-linux:
    runs-on: ${{ matrix.platform }}
    container:
      image: docker.pkg.github.com/torque/deqr/linux-build:${{ matrix.arch }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - [self-hosted, linux, ARM64]
          - ubuntu-latest
        python_version:
          - "cp38-cp38"
          - "cp39-cp39"
        include:
          - platform: [self-hosted, linux, ARM64]
            arch: aarch64
          - platform: ubuntu-latest
            arch: x86_64

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          ${PYBIN} -m pip install --upgrade pip poetry
          ${PYBIN} -m poetry config virtualenvs.create false
          ${PYBIN} -m poetry install --no-root
        env:
          PYBIN: /opt/python/${{ matrix.python_version }}/bin/python
      - name: Build
        run: ${PYBIN} -m poetry build -f wheel
        env:
          PYBIN: /opt/python/${{ matrix.python_version }}/bin/python
      - name: Publish
        run: ${PYBIN} -m poetry publish --username="${{ secrets.PYPI_USERNAME}}" --password="${{ secrets.PYPI_PASSWORD }}"
        env:
          PYBIN: /opt/python/${{ matrix.python_version }}/bin/python
      - name: Cleanup
        if: ${{ always() }}
        run: git clean -fdx
