name: Build CI container

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - ".github/ci-containers/**"
      - "poetry.lock"
      - ".github/workflows/ci-container-build.yml"

jobs:
  build-x86_64-ci-containers:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build images
        run: make 2_28_x86_64
        working-directory: .github/ci-containers
      - name: Push images
        run: |
          echo ${GITHUB_TOKEN} | docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin ghcr.io
          make push-2_28_x86_64
          docker logout ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: .github/ci-containers

  build-aarch64-ci-containers:
    defaults: {run: {working-directory: deqr-containerbuild/.github/ci-containers}}
    runs-on: [self-hosted, linux, ARM64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # NOTE: github actions handles container builds in perhaps the stupidest way
        #       possible, by bind-mounting the host-side runner workdir directly into
        #       the container and then running all actions there. This has a lot of
        #       problems with permissions, and causes a lot of other issues. It's
        #       directly incompatible with the container build workflow, which is
        #       cloned on the host and therefore has host ownership. We work around
        #       this here by having this workflow clone to a separate directory. Note
        #       also that git recently added ownership checks to work around issues
        #       with malicious repositories in shared workspaces, which can result in
        #       git refusing to run properly in the container or on the host if the
        #       checkout was originally done by a different user.
        with:
          path: deqr-containerbuild
      - name: Build images
        run: make 2_28_aarch64
      - name: Push images
        run: |
          echo ${GITHUB_TOKEN} | docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin ghcr.io
          make push-2_28_aarch64
          docker logout ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
